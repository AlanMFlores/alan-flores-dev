[
  {
    "slug": "fae-accesorios",
    "title": "FAE Accesorios",
    "tags": ["HTML", "CSS", "Javascript", "SASS", "React.js"],
    "description": "Este blog fue creado en Next.js y se utilizó Strapi CMS para la gestión de contenido. En lo que respecta a los estilos, se utilizó Tailwind. Se trata de una primera versión, la cuál es utilizada para toma de apuntes acerca de diferentes lenguajes, en formato de entrada de blog.",
    "content": "Este blog fue creado utilizando Next.js, un framework de React.js, y se aprovechó la funcionalidad del sistema de gestión de contenido Strapi CMS. Para la construcción de la interfaz y los estilos, se optó por utilizar Tailwind CSS, una biblioteca de utilidades de CSS altamente configurable.\n\nEsta versión inicial del blog tiene como objetivo principal servir como una herramienta para la toma de apuntes relacionados con diversos lenguajes de programación y tecnologías. Cada entrada de blog se presenta en un formato estructurado y fácil de seguir.\n\nNext.js proporciona un entorno de desarrollo rápido y eficiente, permitiendo una creación ágil de páginas y rutas en una aplicación web. Además, su enfoque en el rendimiento y la optimización garantiza una experiencia de usuario fluida.\n\nLa integración de Strapi CMS facilita la gestión del contenido del blog. Permite crear, editar y eliminar entradas de forma intuitiva y eficiente, brindando a los autores la flexibilidad necesaria para actualizar y mejorar el contenido del blog.\n\nTailwind CSS, por otro lado, ofrece una manera sencilla de diseñar la interfaz del blog. Con su enfoque basado en clases de utilidad, es posible personalizar rápidamente el diseño y los estilos de cada elemento. La biblioteca proporciona un conjunto completo de estilos predefinidos que pueden ser adaptados y extendidos según las necesidades del proyecto.\n\nEn resumen, esta primera versión del blog, desarrollada con Next.js, Strapi CMS y Tailwind CSS, ofrece una plataforma sólida y eficiente para la toma de apuntes y la publicación de contenido relacionado con diversos lenguajes y tecnologías. A medida que el blog evolucione, se podrán agregar nuevas funcionalidades y mejoras para enriquecer aún más la experiencia del lector.",
    "repository" : "https://github.com/AlanMFlores/fae-accesorios-react",
    "deploy" : "https://fae-accesorios-react.vercel.app/"
  },
  {
    "slug": "banco-montserrat",
    "title": "Banco Montserrat",
    "tags": ["HTML", "CSS", "Javascript", "SASS"],
    "description": "Banco Montserrat es un sitio estático desarrollado con Javascript Vanilla en el cual se incorporan funcionalidades de simulación como cambio de divisa, utilizando un API para tener el valor de dolar actualizado, plazo fijo y préstamos. Para los estilos se utiliza el preprocesador SASS.",
    "content": "En este proyecto, al tratarse de un banco ficticio diseñé un logo sencillo y una paleta de colores, para luego crear un mockup de lo que sería el sitio final. El logo fue creado en Illustrator y el mockup en Figma. El diseño se basó naturalmente en sitios webs de bancos reales, decidí optar por un diseño no muy cargado que distraiga la atención de un hipotético usuario.\n\nEn cuanto a la navegación, tanto desde la página principal, como desde el navbar se puede acceder a las distintas funcionalidades de la web, incluso desde el hero el call to action 'Ver servicios' redirecciona a la sección en cuestión.\n\nProbablemente la característica que más sobresale de esta web es la de mantener el valor del dólar oficial actualizado mediante solicitudes a un endpoint. En la sección de 'Moneda extranjera' se puede simular la operación de intercambio entre pesos argentinos y dólares, en el cuál se suma el valor brindado por la API al 65% de impuestos, dando el valor final real. El simulador funciona tanto, introduciendo valores en el input de pesos argentinos como en el de dólares. De acuerdo a que valor se introduzca, se realiza la operación de conversión correspondiente.\n\nLa siguiente simulación corresponde a 'Plazo Fijo'. En esta sección se implementa validación de formularios, ya que por defecto, existe un mínimo y máximo de dinero para introducir, así como también un mínimo y máximo de días. En el caso de no cumplir con estas consignas, se renderizan los correspondientes mensajes de alerta al usuario. En el caso de realizar una simulación exitosa, se va a renderizar un detalle indicando información relevante, así como los intereses generados, el capital invertido, el plazo y el capital actualizado con los intereses.\n\nLa última simulación corresponde a 'Préstamos Personales.' Del mismo modo que con el plazo fijo, hay validación de formularios. Hay establecido un mínimo y un máximo para solicitar como préstamo, con el respectivo mensaje de alerta. Debajo del input se encuentran una serie de botones que corresponden a las cuotas del préstamo a solicitar, de acuerdo a cuál se seleccione, se modifica el valor de la cuota y el valor final a devolver. Al clickear en el botón de 'Solicitar Préstamo' se abre un formulario para llenar con los datos personales, que por supuesto, cuenta con validación.\n\nEn lo que respecta a sitios web hechos con Javascript Vanilla, es el más elaborado, más allá de la sencillez en cuanto a diseño, es uno de mis proyectos más recientes y sin dudas, uno de mis favoritos.",
    "repository" : "https://github.com/AlanMFlores/banco-montserrat",
    "deploy" : "https://alanmflores.github.io/banco-montserrat/"
  },
  {
    "slug": "allungata",
    "title": "Allungata Pizzería",
    "tags": ["HTML", "CSS", "SASS"],
    "description": "Allungata Pizzería es un sitio estático que consta de 5 secciones bien diferenciadas, basado en un diseño en Figma y desarrollado con el preprocesador SASS para brindarle estilos específicos a la web.",
    "content": "Este blog fue creado utilizando Next.js, un framework de React.js, y se aprovechó la funcionalidad del sistema de gestión de contenido Strapi CMS. Para la construcción de la interfaz y los estilos, se optó por utilizar Tailwind CSS, una biblioteca de utilidades de CSS altamente configurable.\n\nEsta versión inicial del blog tiene como objetivo principal servir como una herramienta para la toma de apuntes relacionados con diversos lenguajes de programación y tecnologías. Cada entrada de blog se presenta en un formato estructurado y fácil de seguir.\n\nNext.js proporciona un entorno de desarrollo rápido y eficiente, permitiendo una creación ágil de páginas y rutas en una aplicación web. Además, su enfoque en el rendimiento y la optimización garantiza una experiencia de usuario fluida.\n\nLa integración de Strapi CMS facilita la gestión del contenido del blog. Permite crear, editar y eliminar entradas de forma intuitiva y eficiente, brindando a los autores la flexibilidad necesaria para actualizar y mejorar el contenido del blog.\n\nTailwind CSS, por otro lado, ofrece una manera sencilla de diseñar la interfaz del blog. Con su enfoque basado en clases de utilidad, es posible personalizar rápidamente el diseño y los estilos de cada elemento. La biblioteca proporciona un conjunto completo de estilos predefinidos que pueden ser adaptados y extendidos según las necesidades del proyecto.\n\nEn resumen, esta primera versión del blog, desarrollada con Next.js, Strapi CMS y Tailwind CSS, ofrece una plataforma sólida y eficiente para la toma de apuntes y la publicación de contenido relacionado con diversos lenguajes y tecnologías. A medida que el blog evolucione, se podrán agregar nuevas funcionalidades y mejoras para enriquecer aún más la experiencia del lector.",
    "repository" : "https://github.com/AlanMFlores/pizzeria-alanflores-coderhouse",
    "deploy" : "https://alanmflores.github.io/pizzeria-alanflores-coderhouse/"
  },
 {
    "slug": "valhalla-gym",
    "title": "Valhalla GYM",
    "tags": ["HTML", "CSS", "Javascript", "Tailwind"],
    "description": "Valhalla GYM es una landing page sencilla, que brinda información básica y general de un gimnasio, se utilizó Tailwind para los estilos y Javascript para pequeñas animaciones y validaciones de formularios.",
    "content": "Este blog fue creado utilizando Next.js, un framework de React.js, y se aprovechó la funcionalidad del sistema de gestión de contenido Strapi CMS. Para la construcción de la interfaz y los estilos, se optó por utilizar Tailwind CSS, una biblioteca de utilidades de CSS altamente configurable.\n\nEsta versión inicial del blog tiene como objetivo principal servir como una herramienta para la toma de apuntes relacionados con diversos lenguajes de programación y tecnologías. Cada entrada de blog se presenta en un formato estructurado y fácil de seguir.\n\nNext.js proporciona un entorno de desarrollo rápido y eficiente, permitiendo una creación ágil de páginas y rutas en una aplicación web. Además, su enfoque en el rendimiento y la optimización garantiza una experiencia de usuario fluida.\n\nLa integración de Strapi CMS facilita la gestión del contenido del blog. Permite crear, editar y eliminar entradas de forma intuitiva y eficiente, brindando a los autores la flexibilidad necesaria para actualizar y mejorar el contenido del blog.\n\nTailwind CSS, por otro lado, ofrece una manera sencilla de diseñar la interfaz del blog. Con su enfoque basado en clases de utilidad, es posible personalizar rápidamente el diseño y los estilos de cada elemento. La biblioteca proporciona un conjunto completo de estilos predefinidos que pueden ser adaptados y extendidos según las necesidades del proyecto.\n\nEn resumen, esta primera versión del blog, desarrollada con Next.js, Strapi CMS y Tailwind CSS, ofrece una plataforma sólida y eficiente para la toma de apuntes y la publicación de contenido relacionado con diversos lenguajes y tecnologías. A medida que el blog evolucione, se podrán agregar nuevas funcionalidades y mejoras para enriquecer aún más la experiencia del lector.",
    "repository" : "https://github.com/AlanMFlores/valhalla-gym",
    "deploy" : "https://alanmflores.github.io/valhalla-gym/"
  },
  {
    "slug": "web-portfolio",
    "title": "Portfolio Web",
    "tags": ["HTML", "CSS", "Javascript", "ChakraUI", "React.js", "Next.js"],
    "description": "El portfolio web, es decir, este mismo sitio, fue creado con Next.js y maquetado con la librería ChakraUI. Se trata de una primera versión, con funciones base y se planea agregar mejoras en una futura segunda versión. El maquetador se realizó con ChakraUI.",
    "content": "Este blog fue creado utilizando Next.js, un framework de React.js, y se aprovechó la funcionalidad del sistema de gestión de contenido Strapi CMS. Para la construcción de la interfaz y los estilos, se optó por utilizar Tailwind CSS, una biblioteca de utilidades de CSS altamente configurable.\n\nEsta versión inicial del blog tiene como objetivo principal servir como una herramienta para la toma de apuntes relacionados con diversos lenguajes de programación y tecnologías. Cada entrada de blog se presenta en un formato estructurado y fácil de seguir.\n\nNext.js proporciona un entorno de desarrollo rápido y eficiente, permitiendo una creación ágil de páginas y rutas en una aplicación web. Además, su enfoque en el rendimiento y la optimización garantiza una experiencia de usuario fluida.\n\nLa integración de Strapi CMS facilita la gestión del contenido del blog. Permite crear, editar y eliminar entradas de forma intuitiva y eficiente, brindando a los autores la flexibilidad necesaria para actualizar y mejorar el contenido del blog.\n\nTailwind CSS, por otro lado, ofrece una manera sencilla de diseñar la interfaz del blog. Con su enfoque basado en clases de utilidad, es posible personalizar rápidamente el diseño y los estilos de cada elemento. La biblioteca proporciona un conjunto completo de estilos predefinidos que pueden ser adaptados y extendidos según las necesidades del proyecto.\n\nEn resumen, esta primera versión del blog, desarrollada con Next.js, Strapi CMS y Tailwind CSS, ofrece una plataforma sólida y eficiente para la toma de apuntes y la publicación de contenido relacionado con diversos lenguajes y tecnologías. A medida que el blog evolucione, se podrán agregar nuevas funcionalidades y mejoras para enriquecer aún más la experiencia del lector.",
    "repository" : "",
    "deploy" : ""
  }
]
